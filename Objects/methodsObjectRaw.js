export const methodsObject = [
  {
    method: "object.name",
    inputValue: "",
    inputType: null,
    contents: ["object.name;"],
    spec: "method",
  },
  {
    method: "object.surname",
    inputValue: "",
    inputType: null,
    contents: ["object.surname;"],
    spec: "method",
  },
  {
    method: "object.age",
    inputValue: "",
    inputType: null,
    contents: ["object.age;"],
    spec: "method",
  },
  {
    method: "object.sayHello()",
    inputValue: "",
    inputType: null,
    contents: [],
    additionalContents: ["object.sayHello();"],
    spec: "method",
  },
  {
    method: "object.getFullName()",
    inputValue: "",
    inputType: null,
    contents: [],
    additionalContents: ["object.getFullName();"],
    spec: "method",
  },
  {
    method: "object.friend",
    inputValue: "",
    inputType: null,
    contents: ["object.friend;"],
    spec: "method",
  },
  {
    method: "object['friend']['name']",
    inputValue: "",
    inputType: null,
    contents: ["object['friend']['name']"],
    spec: "method",
  },
  {
    method: "object['friend']['surname']",
    inputValue: "",
    inputType: null,
    contents: ["object['friend']['surname']"],
    spec: "method",
  },
  {
    method: "object['friend']['age']",
    inputValue: "",
    inputType: null,
    contents: ["object['friend']['age']"],
    spec: "method",
  },
  {
    method: "object = exampleObject",
    inputValue: "",
    inputType: null,
    contents: [],
    additionalContents: ["object = exampleObject"],
    spec: "method",
  },
  {
    method: "object === exampleObject",
    inputValue: "",
    inputType: null,
    contents: ["object === exampleObject"],
    spec: "method",
  },
  {
    method: "object.name === exampleObject.name",
    inputValue: "",
    inputType: null,
    contents: ["object.name === exampleObject.name"],
    spec: "method",
  },
  {
    method: "object.friend === exampleObject.friend",
    inputValue: "",
    inputType: null,
    contents: ["object.friend === exampleObject.friend"],
    spec: "method",
  },
  {
    method: "object.name = ",
    inputValue: "",
    inputType: "text",
    inputPattern: /^("[^"]*"|\-?\d+)$/,
    contents: [],
    additionalContents: ["object.name = "],
    spec: "method",
  },
  {
    method: "object.surname = ",
    inputValue: "",
    inputType: "text",
    inputPattern: /^("[^"]*"|\-?\d+)$/,
    contents: [],
    additionalContents: ["object.surname = "],
    spec: "method",
  },
  {
    method: "object.age = ",
    inputValue: "",
    inputType: "text",
    inputPattern: /^("[^"]*"|\-?\d+)$/,
    contents: [],
    additionalContents: ["object.age = "],
    spec: "method",
  },
  {
    method: "object['friend']['name'] = ",
    inputValue: "",
    inputType: "text",
    inputPattern: /^("[^"]*"|\-?\d+)$/,
    contents: [],
    additionalContents: ["object['friend']['name'] = "],
    spec: "method",
  },
  {
    method: "object['friend']['surname'] = ",
    inputValue: "",
    inputType: "text",
    inputPattern: /^("[^"]*"|\-?\d+)$/,
    contents: [],
    additionalContents: ["object['friend']['surname'] = "],
    spec: "method",
  },
  {
    method: "object['friend']['age'] = ",
    inputValue: "",
    inputType: "text",
    inputPattern: /^("[^"]*"|\-?\d+)$/,
    contents: [],
    additionalContents: ["object['friend']['age'] = "],
    spec: "method",
  },
  {
    method: "cloning an object (shallow copy)",
    inputValue: "",
    inputType: null,
    contents: ["{ ...object }"],
    spec: "spreadSyntax",
  },
  {
    method: "merging objects",
    inputValue: "",
    inputType: null,
    contents: ["{ ...object, ...additionalObject }"],
    additionalContents: ["const additionalObject = {", "city: 'New York',", "hobby: 'swimming',", "}"],
    spec: "spreadSyntax",
  },
  {
    method: "iteration",
    inputValue: "",
    inputType: null,
    contents: [],
    additionalContents: ["for ( const property in object) {", "console.log(`${property}: ${object[property]}`)", "}"],
    spec: "spreadSyntax",
  },
  {
    method: "adding properties to an object",
    inputValue: "",
    inputType: null,
    contents: ["{ ...object, city: 'N/A' }"],
    spec: "immutability",
  },
  {
    method: "editing object properties",
    inputValue: "",
    inputType: null,
    contents: ["{ ...object, name: 'Tom' }"],
    spec: "immutability",
  },
  {
    method: "removal of object's property",
    inputValue: "",
    inputType: null,
    contents: ["rest"],
    additionalContents: ["const { age, ...rest } = object"],
    spec: "immutability",
  },

];